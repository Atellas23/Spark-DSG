<?xml version="1.0" encoding="ISO-8859-15"?>
<launch>
  <arg name="results_dir"/>
  <arg name="ogx_graph_path" value="$(arg results_dir)/ogx/dsg_with_mesh.json"/>
  <arg name="ivx_graph_path" value="$(arg results_dir)/ivx/backend/dsg_with_mesh.json"/>
  <arg name="ivl_graph_path" value="$(arg results_dir)/ivl/backend/dsg_with_mesh.json"/>

  <arg name="viz_config_dir" default="$(find kimera_dsg_visualizer)/config"/>

  <arg name="verbosity" default="0"/>
  <arg name="debug" default="false"/>

  <arg name="launch-prefix" default="gdb --args" if="$(arg debug)"/>
  <arg name="launch-prefix" default="" unless="$(arg debug)"/>

  <include file="$(find kimera_dsg_visualizer)/launch/includes/kimera_dsg_visualizer_base.xml"
           pass_all_args="true">
    <arg name="visualizer_ns" value="/ogx_visualizer"/>
    <arg name="include_rviz" value="false"/>
    <arg name="publish_view_transforms" value="false"/>
  </include>

  <include file="$(find kimera_dsg_visualizer)/launch/includes/kimera_dsg_visualizer_base.xml"
           pass_all_args="true">
    <arg name="visualizer_ns" value="/ivx_visualizer"/>
    <arg name="include_rviz" value="false"/>
    <arg name="publish_view_transforms" value="false"/>
  </include>

  <include file="$(find kimera_dsg_visualizer)/launch/includes/kimera_dsg_visualizer_base.xml"
           pass_all_args="true">
    <arg name="visualizer_ns" value="/ivl_visualizer"/>
    <arg name="include_rviz" value="false"/>
    <arg name="publish_view_transforms" value="false"/>
  </include>

  <node name="ogx_visualizer_node"
        pkg="kimera_dsg_visualizer"
        type="kimera_dsg_visualizer_node"
        output="screen"
        required="true"
        args="-alsologtostderr -colorlogtostderr -v=$(arg verbosity)">
    <param name="visualizer_ns" value="/ogx_visualizer"/>
    <param name="scene_graph_input_path" value="$(arg ogx_graph_path)"/>
  </node>

  <node name="ivx_visualizer_node"
        pkg="kimera_dsg_visualizer"
        type="kimera_dsg_visualizer_node"
        output="screen"
        required="true"
        args="-alsologtostderr -colorlogtostderr -v=$(arg verbosity)">
    <param name="visualizer_ns" value="/ivx_visualizer"/>
    <param name="scene_graph_input_path" value="$(arg ivx_graph_path)"/>
  </node>

  <node name="ivl_visualizer_node"
        pkg="kimera_dsg_visualizer"
        type="kimera_dsg_visualizer_node"
        output="screen"
        required="true"
        args="-alsologtostderr -colorlogtostderr -v=$(arg verbosity)">
    <param name="visualizer_ns" value="/ivl_visualizer"/>
    <param name="scene_graph_input_path" value="$(arg ivl_graph_path)"/>
  </node>

  <node name="rviz" pkg="rviz" type="rviz" output="log"
        args="-d $(find kimera_dsg_visualizer)/rviz/results_visualizer.rviz"/>

  <!-- Publish a static tf to visualize scene-graph in orthographic projection sideways -->
  <node pkg="tf2_ros"
      type="static_transform_publisher"
      name="ortho_tf_publisher"
      args="0 0 0 0.707 0 0 0.707 world rviz_ortho"/>

  <!-- Publish a static tf to visualize scene-graph top-down -->
  <node pkg="tf2_ros"
      type="static_transform_publisher"
      name="topdown_tf_publisher"
      args="0 0 0 0 0.707 0 0.707 world rviz_topdown"/>

</launch>
